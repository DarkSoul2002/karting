<?php

namespace App\Repository;

use App\Entity\Activiteit;
use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use Doctrine\ORM\EntityRepository;
use Doctrine\Persistence\ManagerRegistry;

/**
 * ActiviteitRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ActiviteitRepository extends ServiceEntityRepository
{
    public function __construct(ManagerRegistry $registry)
    {
        parent::__construct($registry, Activiteit::class);
    }

    public function getBeschikbareActiviteiten($userid)
    {
        $em = $this->getEntityManager();
        $query = $em->createQuery("SELECT a FROM App:Activiteit a WHERE :userid NOT MEMBER OF a.users ORDER BY a.datum");

        $query->setParameter('userid', $userid);

        return $query->getResult();
    }

    public function getIngeschrevenActiviteiten($userid)
    {
        return $this->createQueryBuilder('a')
            ->join('a.users', 'u')
            ->andWhere('u.id = :userid')
            ->andWhere('a.datum >= CURRENT_DATE()')
            ->orderBy('a.datum')
            ->setParameter('userid', $userid)
            ->getQuery()
            ->getResult()
        ;
    }

    public function getTotaal($activiteiten)
    {

        $totaal = 0;
        foreach ($activiteiten as $a) {
            $totaal += $a->getSoort()->getPrijs();
        }
        return $totaal;

    }

    public function findAll()
    {
        return $this->createQueryBuilder('a')
            ->andWhere('a.datum >= CURRENT_DATE()')
            ->orderBy('a.datum')
            ->getQuery()
            ->getResult()
            ;
    }

    public function getTotaalActiviteiten(): int
    {
        return $this->createQueryBuilder('a')
            ->select('count(a.id)')
            ->getQuery()
            ->getSingleScalarResult();
    }
}
